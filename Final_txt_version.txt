LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.ALL;


ENTITY Final IS
	PORT (
		clk : IN STD_LOGIC;
		resetn : STD_LOGIC;
		ena : STD_LOGIC;
		digit : IN STD_LOGIC_VECTOR(3 downto 0);
		pulse_10Hz : OUT STD_LOGIC;
		segments : OUT STD_LOGIC_VECTOR(6 downto 0)
		);
END Final;

ARCHITECTURE behavioral OF Final IS
	signal cnt : STD_LOGIC_VECTOR(23 downto 0);
BEGIN
	PROCESS (digit)
	BEGIN
		segments <= "1111111";
		
		CASE digit is
			when "0000" => segments <= "0000001"; -- 0
			when "0001" => segments <= "1001111"; -- 1
			when "0010" => segments <= "0010010"; -- 2
			when "0011" => segments <= "0000110"; -- 3
			when "0100" => segments <= "1001100"; -- 4
			when "0101" => segments <= "0100100"; -- 5
			when "0110" => segments <= "0100000"; -- 6
			when "0111" => segments <= "0001111"; -- 7
			when "1000" => segments <= "0000000"; -- 8
			when "1001" => segments <= "0000100"; -- 9
         when others => segments <= "1111111"; -- Blank for invalid input
			
		end CASE;
		
		IF (resetn = '0') THEN
			cnt <= (OTHERS => '0');
		ELSIF (clk'EVENT AND clk = '1') THEN
			IF (ena = '1') THEN
				IF (cnt = x"FAF07F") THEN -- 2FAF07F(hex) = 49,999,999 (decimal)
					cnt <= x"000000";
				ELSE
					cnt <= cnt + 1;
				END IF;
			ELSE
				cnt <= cnt;
			END IF;
		END IF; -- clk
		
		
		
		
	END PROCESS;
	
	WITH cnt SELECT
		pulse_10Hz <= '1' WHEN x"FAF07F",
			'0' WHEN OTHERS;
	
	
END behavioral;



