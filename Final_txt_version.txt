LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.std_logic_unsigned.ALL;


ENTITY Final IS
	PORT (
		clk : IN STD_LOGIC;
		resetn : IN STD_LOGIC;
		S0: OUT STD_LOGIC_VECTOR(6 downto 0)
		);
END Final;

ARCHITECTURE behavioral OF Final IS
	signal cnt : STD_LOGIC_VECTOR(23 downto 0);
	signal count_S0 : STD_LOGIC_VECTOR(3 downto 0);
	signal digit : STD_LOGIC_VECTOR(3 downto 0);
	signal ena : STD_LOGIC;
	signal pulse_10Hz : STD_LOGIC;
	signal segments : STD_LOGIC_VECTOR(6 downto 0);
BEGIN
	PROCESS (digit)
	BEGIN
		segments <= "1111111";
		
		CASE digit is
			when "0000" => segments <= "0000001"; -- 0
			when "0001" => segments <= "1001111"; -- 1
			when "0010" => segments <= "0010010"; -- 2
			when "0011" => segments <= "0000110"; -- 3
			when "0100" => segments <= "1001100"; -- 4
			when "0101" => segments <= "0100100"; -- 5
			when "0110" => segments <= "0100000"; -- 6
			when "0111" => segments <= "0001111"; -- 7
			when "1000" => segments <= "0000000"; -- 8
			when "1001" => segments <= "0000100"; -- 9
         when others => segments <= "1111111"; -- Blank for invalid input
			
		end CASE;
		
		IF (resetn = '0') THEN
			cnt <= (OTHERS => '0');
		ELSIF (clk'EVENT AND clk = '1') THEN
			IF (ena = '1') THEN
				IF (cnt = x"FAF07F") THEN -- 2FAF07F(hex) = 49,999,999 (decimal)
					cnt <= x"000000";
				ELSE
					cnt <= cnt + 1;
				END IF;
			ELSE
				cnt <= cnt;
			END IF;
		END IF; -- clk
		
		IF (resetn = '0') THEN
			count_S0 <= (OTHERS => '0');
		ELSIF (ena = '1') THEN
			IF (count_S0 = "0000") THEN 
				digit <= "0000";
			ELSIF (count_S0 = "0001") THEN 
				digit <= "0001";
			ELSIF (count_S0 = "0010") THEN 
				digit <= "0010";
			ELSIF (count_S0 = "0011") THEN 
				digit <= "0011";
			ELSIF (count_S0 = "0100") THEN 
				digit <= "0100";
			ELSIF (count_S0 = "0101") THEN 
				digit <= "0101";
			ELSIF (count_S0 = "0110") THEN 
				digit <= "0110";
			ELSIF (count_S0 = "0111") THEN 
				digit <= "0111";
			ELSIF (count_S0 = "1000") THEN 
				digit <= "1000";
			ELSIF (count_S0 = "1001") THEN 
				digit <= "1001";
			
			END IF;
			count_S0 <= count_S0 + 1;
			IF (count_S0 = "1010") THEN
				count_S0 <= "0000";
			END IF; 
			S0 <= segments;
		END IF;
		
		
		
		
	END PROCESS;
	
	WITH cnt SELECT
		pulse_10Hz <= '1' WHEN x"FAF07F",
			'0' WHEN OTHERS;
	
	
END behavioral;


